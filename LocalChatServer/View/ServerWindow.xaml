<Window x:Class="LocalChatServer.View.ServerWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:LocalChatServer.View"
        xmlns:model="clr-namespace:LocalChatServer.Model"
        xmlns:app="clr-namespace:LocalChatServer"
        mc:Ignorable="d"
        Title="LocalChat Server" MinHeight="450" MinWidth="850"
        WindowStartupLocation="CenterScreen"
        DataContext="{Binding Server, Source={StaticResource Locator}}"
        FocusManager.FocusedElement="{Binding ElementName=txtBox_message}">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <Menu Grid.Row="0" Padding="2">
            <MenuItem Header="Server">
                <MenuItem Header="Start" Command="{Binding Start}"/>
                <MenuItem Header="Stop" Command="{Binding Stop}"/>
                <MenuItem Header="Restart" Command="{Binding Restart}"/>
                <Separator/>
                <MenuItem Header="Settings" Command="{Binding OpenSettings}"/>
            </MenuItem>
            <MenuItem Header="Close" Command="{Binding Close}"/>
        </Menu>
        <GroupBox Grid.Row="1" Margin="5 5 5 0" Header="Monitoring">
            <Grid >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" MinWidth="150"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto" MinWidth="200"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" Grid.Column="0" HorizontalAlignment="Left" Text="Connected clients"/>
                <ListBox Grid.Row="1" Grid.Column="0" HorizontalAlignment="Stretch" Margin="0 5 5 0" ItemsSource="{Binding ConnectedClients}">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="Focusable" Value="False"/>
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Margin="5" Text="{Binding Name}"/>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
                <GridSplitter HorizontalAlignment="Center" VerticalAlignment="Stretch" Grid.Column="1" Grid.RowSpan="2"
                          ShowsPreview="False" Width="3" Background="#FFB2B2B2"/>
                <TextBlock Grid.Row="0" Grid.Column="2" HorizontalAlignment="Left" Text="Messages" Margin="5 0 0 0"/>
                <ListBox Grid.Row="1" Grid.Column="2" Margin="5 5 5 0" ItemsSource="{Binding Messages}"
                         app:ListBoxBehavior.ScrollOnNewItem="true" app:ListBoxBehavior.SelectItemWhenScrollOnNewItem="false"
                         HorizontalContentAlignment="Stretch" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                         ScrollViewer.CanContentScroll="False">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="Focusable" Value="False"/>
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Text="{Binding Time, StringFormat='{}{0:dd.MM.yyyy HH:mm}'}"/>
                                <TextBlock Grid.Column="1" Text="{Binding Sender, StringFormat='{}{0}:'}" Margin="5 0 0 0"/>
                                <TextBlock Grid.Column="2" Text="{Binding Content}" Margin="5 0 0 0" TextWrapping="Wrap"/>
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
                <GridSplitter HorizontalAlignment="Center" VerticalAlignment="Stretch" Grid.Column="3" Grid.RowSpan="2"
                          ShowsPreview="False" Width="3" Background="#FFB2B2B2"/>
                <TextBlock Grid.Row="0" Grid.Column="4" Text="Notifications" HorizontalAlignment="Left" Margin="5 0 0 0"/>
                <ListBox Grid.Row="1" Grid.Column="4" Margin="5 5 0 0" HorizontalAlignment="Stretch" ItemsSource="{Binding Notifications}"
                     HorizontalContentAlignment="Stretch" app:ListBoxBehavior.ScrollOnNewItem="true">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="Focusable" Value="False"/>
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid Margin="0 2 0 2">
                                <Grid.Style>
                                    <Style TargetType="Grid">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Type}" Value="{x:Static model:NotificationType.ServerStarted}">
                                                <Setter Property="Background" Value="#FFABD5FF"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Type}" Value="{x:Static model:NotificationType.ClientConnected}">
                                                <Setter Property="Background" Value="#FF7DFF89"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Type}" Value="{x:Static model:NotificationType.ClientDisconnected}">
                                                <Setter Property="Background" Value="#FFFF9494"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Type}" Value="{x:Static model:NotificationType.ServerStopped}">
                                                <Setter Property="Background" Value="#FFFF9494"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Type}" Value="{x:Static model:NotificationType.ServerStartFailed}">
                                                <Setter Property="Background" Value="#FFFF5050"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Style>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>
                                <TextBlock Text="{Binding Time, StringFormat='{}{0:dd.MM.yyyy HH:mm}'}" Grid.Row="0" Margin="2 2 2 0"/>
                                <TextBlock Text="{Binding Content}" Grid.Row="1" Margin="2 0 2 2"/>
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Grid>
        </GroupBox>
        <GroupBox Header="Message" Grid.Row="2">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <TextBox x:Name="txtBox_message" Margin="5" Text="{Binding NewMessage, UpdateSourceTrigger=PropertyChanged}" Grid.Column="0">
                    <TextBox.InputBindings>
                        <KeyBinding Key="Enter" Command="{Binding SendMessage}"/>
                    </TextBox.InputBindings>
                </TextBox>
                <Button Margin="5" Content="Send message" Grid.Column="1" Padding="10 3" Command="{Binding SendMessage}"/>
            </Grid>
        </GroupBox>
        <StatusBar Grid.Row="3">
            <StatusBarItem>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Server status: "/>
                    <TextBlock >
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ServerStarted}" Value="True">
                                        <Setter Property="Text" Value="Running"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ServerStarted}" Value="False">
                                        <Setter Property="Text" Value="Stopped"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </StackPanel>
            </StatusBarItem>
            <Separator/>
            <StatusBarItem>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Server port: "/>
                    <TextBlock Text="{Binding Port}"/>
                </StackPanel>
            </StatusBarItem>
            <Separator/>
            <StatusBarItem>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Server client name: "/>
                    <TextBlock Text="{Binding Client.Name}"/>
                </StackPanel>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
