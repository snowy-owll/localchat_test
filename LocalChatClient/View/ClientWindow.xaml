<Window x:Class="LocalChatClient.View.ClientWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:LocalChatClient"
        xmlns:app="clr-namespace:LocalChatClient"
        mc:Ignorable="d"
        Title="LocalChat Client" MinHeight="450" MinWidth="800"
        DataContext="{Binding Client, Source={StaticResource Locator}}"
        WindowStartupLocation="CenterScreen"
        FocusManager.FocusedElement="{Binding ElementName=txtBox_message}">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <Menu Grid.Row="0" Padding="2">
            <MenuItem Header="Client">
                <MenuItem Header="Connect" Command="{Binding Connect}"/>
                <MenuItem Header="Disconnect" Command="{Binding Disconnect}"/>
                <MenuItem Header="Reconnect" Command="{Binding Reconnect}"/>
                <MenuItem Header="Logout" Command="{Binding Logout}"/>
                <Separator/>
                <MenuItem Header="Settings" Command="{Binding OpenSettings}"/>
            </MenuItem>
            <MenuItem Header="Close" Command="{Binding Close}"/>
        </Menu>
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <TextBlock Grid.Row="0" HorizontalAlignment="Left" Text="Messages" Margin="5 0 0 0"/>
            <ListBox Grid.Row="1" Grid.Column="2" Margin="5" ItemsSource="{Binding Messages}"
                         app:ListBoxBehavior.ScrollOnNewItem="true" app:ListBoxBehavior.SelectItemWhenScrollOnNewItem="false"
                     ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                     HorizontalContentAlignment="Stretch" ScrollViewer.CanContentScroll="False">
                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="Focusable" Value="False"/>
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="{Binding Time, StringFormat='{}{0:dd.MM.yyyy HH:mm}'}"/>
                            <TextBlock Grid.Column="1" Text="{Binding Sender, StringFormat='{}{0}:'}" Margin="5 0 0 0"/>
                            <TextBlock Grid.Column="2" Text="{Binding Content}" Margin="5 0 0 0" TextWrapping="Wrap"/>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </Grid>
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <TextBox x:Name="txtBox_message" Margin="5" Text="{Binding NewMessage, UpdateSourceTrigger=PropertyChanged}" Grid.Column="0">
                <TextBox.InputBindings>
                    <KeyBinding Key="Enter" Command="{Binding SendMessage}"/>
                </TextBox.InputBindings>
            </TextBox>
            <Button Margin="5" Grid.Column="1" Padding="10 3" Command="{Binding SendMessage}">
                <Button.Style>
                    <Style TargetType="Button">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Sending}" Value="True">
                                <Setter Property="Content" Value="Please wait..."/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Sending}" Value="False">
                                <Setter Property="Content" Value="Send message"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </Grid>
        <StatusBar Grid.Row="3">
            <StatusBarItem>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Client status: "/>
                    <TextBlock >
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ClientConnected}" Value="True"/>
                                            <Condition Binding="{Binding Connection}" Value="False"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Text" Value="Connected"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ClientConnected}" Value="False"/>
                                            <Condition Binding="{Binding Connection}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Text" Value="Connecting"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ClientConnected}" Value="False"/>
                                            <Condition Binding="{Binding Connection}" Value="False"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Text" Value="Disconnected"/>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </StackPanel>
            </StatusBarItem>
            <Separator/>
            <StatusBarItem>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Server IP: "/>
                    <TextBlock Text="{Binding ServerIp}"/>
                </StackPanel>
            </StatusBarItem>
            <StatusBarItem>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Server port: "/>
                    <TextBlock Text="{Binding ServerPort}"/>
                </StackPanel>
            </StatusBarItem>
            <Separator/>
            <StatusBarItem>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Client name: "/>
                    <TextBlock Text="{Binding Client.Name}"/>
                </StackPanel>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
